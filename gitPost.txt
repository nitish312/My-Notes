🌀Git is a distributed version control system, vital for tracking code changes over time. It provides issue tracking and tools for efficient code collaboration and management.✨

✅ 𝗟𝗼𝗰𝗮𝗹 𝗮𝗻𝗱 𝗥𝗲𝗺𝗼𝘁𝗲 𝗥𝗲𝗽𝗼𝘀𝗶𝘁𝗼𝗿𝗶𝗲𝘀 💻
Git uses local repositories for local work and remote repositories (ex. GitHub) for collaboration and backup.

✅ 𝗕𝗿𝗮𝗻𝗰𝗵𝗶𝗻𝗴 🌿
Git allows creating branches to develop new features or fix bugs without affecting the main code.

✅ 𝗖𝗼𝗺𝗺𝗶𝘁𝘀 📦
Commits are snapshots of code with unique IDs and explanatory messages.

✅ 𝗣𝘂𝗹𝗹 𝗥𝗲𝗾𝘂𝗲𝘀𝘁𝘀 🔄
On GitHub, pull requests propose changes, enabling collaboration and code review.

✅ 𝗙𝗼𝗿𝗸𝘀 🍴
You can fork GitHub repositories to create your copy for contributing to open-source projects.

✅ 𝗠𝗲𝗿𝗴𝗲 𝗮𝗻𝗱 𝗖𝗼𝗻𝗳𝗹𝗶𝗰𝘁𝘀 🔀
Merging combines branch changes, while conflicts need manual resolution when code conflicts arise.

✅ .𝗴𝗶𝘁𝗶𝗴𝗻𝗼𝗿𝗲 🚫
The .gitignore file specifies files or directories to exclude from version control.

🚀 Most Used Git Commands

📍 git init ➡ Initialize a new repository.
📍 git clone [repository] ➡ Clone a remote repository.
📍 git add [file] ➡ Stage file changes.
📍 git commit -m "message" ➡ Commit changes with a descriptive message.
📍 git status ➡ Check repository status.
📍 git push ➡ Push committed changes to a remote repository.
📍 git pull ➡ Fetch and merge changes from a remote repository.
📍 git branch ➡ List branches.
📍 git checkout [branch] ➡ Switch to a different branch.
📍 git merge [branch] ➡ Merge a branch into the current branch.
📍 git log ➡ View commit history.
📍 git remote add [name] [url] ➡ Add a remote repository.
📍 git remote -v ➡ List remote repositories and their URLs.
📍 git diff ➡ Show differences between files.
📍 git reset [file] ➡ Unstage a file.
